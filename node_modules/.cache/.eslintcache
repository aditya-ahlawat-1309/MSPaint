[{"D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\index.js":"1","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\App.js":"2","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\reportWebVitals.js":"3","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\script.js":"4","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\jscolor.js":"5","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\Paint.js":"6"},{"size":650,"mtime":1657444489734,"results":"7","hashOfConfig":"8"},{"size":192,"mtime":1657443818126,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1657372876258,"results":"10","hashOfConfig":"8"},{"size":12960,"mtime":1657462712718,"results":"11","hashOfConfig":"8"},{"size":72713,"mtime":1657443779026,"results":"12","hashOfConfig":"8"},{"size":3805,"mtime":1657462699920,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1vou9ig",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31","usedDeprecatedRules":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\index.js",[],[],[],"D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\App.js",["35","36"],[],"import \"./App.css\"; \nimport Paint from \"./Paint\";\n\nimport { script } from \"./script\";\nimport { jscolor } from \"./jscolor\";\nfunction App() {\n  return (\n   <Paint/> \n  );\n}\n\nexport default App;\n","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\reportWebVitals.js",[],[],"D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\script.js",[],[],"D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\jscolor.js",["37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69"],[],"\r\n\r\n/**\r\n * jscolor - JavaScript Color Picker\r\n *\r\n * @link    http://jscolor.com\r\n * @license For open source use: GPLv3\r\n *          For commercial use: JSColor Commercial License\r\n * @author  Jan Odvarko\r\n * @version 2.0.5\r\n *\r\n * See usage examples at http://jscolor.com/examples/\r\n */\r\n\r\n  \"use strict\";\r\n\r\n  if (!window.jscolor) {\r\n    window.jscolor = (function () {\r\n      var jsc = {\r\n        register: function () {\r\n          jsc.attachDOMReadyEvent(jsc.init);\r\n          jsc.attachEvent(document, \"mousedown\", jsc.onDocumentMouseDown);\r\n          jsc.attachEvent(document, \"touchstart\", jsc.onDocumentTouchStart);\r\n          jsc.attachEvent(window, \"resize\", jsc.onWindowResize);\r\n        },\r\n\r\n        init: function () {\r\n          if (jsc.jscolor.lookupClass) {\r\n            jsc.jscolor.installByClassName(jsc.jscolor.lookupClass);\r\n          }\r\n        },\r\n\r\n        tryInstallOnElements: function (elms, className) {\r\n          var matchClass = new RegExp(\r\n            \"(^|\\\\s)(\" + className + \")(\\\\s*(\\\\{[^}]*\\\\})|\\\\s|$)\",\r\n            \"i\"\r\n          );\r\n\r\n          for (var i = 0; i < elms.length; i += 1) {\r\n            if (\r\n              elms[i].type !== undefined &&\r\n              elms[i].type.toLowerCase() == \"color\"\r\n            ) {\r\n              if (jsc.isColorAttrSupported) {\r\n                // skip inputs of type 'color' if supported by the browser\r\n                continue;\r\n              }\r\n            }\r\n            var m;\r\n            if (\r\n              !elms[i].jscolor &&\r\n              elms[i].className &&\r\n              (m = elms[i].className.match(matchClass))\r\n            ) {\r\n              var targetElm = elms[i];\r\n              var optsStr = null;\r\n\r\n              var dataOptions = jsc.getDataAttr(targetElm, \"jscolor\");\r\n              if (dataOptions !== null) {\r\n                optsStr = dataOptions;\r\n              } else if (m[4]) {\r\n                optsStr = m[4];\r\n              }\r\n\r\n              var opts = {};\r\n              if (optsStr) {\r\n                try {\r\n                  opts = new Function(\"return (\" + optsStr + \")\")();\r\n                } catch (eParseError) {\r\n                  jsc.warn(\r\n                    \"Error parsing jscolor options: \" +\r\n                      eParseError +\r\n                      \":\\n\" +\r\n                      optsStr\r\n                  );\r\n                }\r\n              }\r\n              targetElm.jscolor = new jsc.jscolor(targetElm, opts);\r\n            }\r\n          }\r\n        },\r\n\r\n        isColorAttrSupported: (function () {\r\n          var elm = document.createElement(\"input\");\r\n          if (elm.setAttribute) {\r\n            elm.setAttribute(\"type\", \"color\");\r\n            if (elm.type.toLowerCase() == \"color\") {\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        })(),\r\n\r\n        isCanvasSupported: (function () {\r\n          var elm = document.createElement(\"canvas\");\r\n          return !!(elm.getContext && elm.getContext(\"2d\"));\r\n        })(),\r\n\r\n        fetchElement: function (mixed) {\r\n          return typeof mixed === \"string\"\r\n            ? document.getElementById(mixed)\r\n            : mixed;\r\n        },\r\n\r\n        isElementType: function (elm, type) {\r\n          return elm.nodeName.toLowerCase() === type.toLowerCase();\r\n        },\r\n\r\n        getDataAttr: function (el, name) {\r\n          var attrName = \"data-\" + name;\r\n          var attrValue = el.getAttribute(attrName);\r\n          if (attrValue !== null) {\r\n            return attrValue;\r\n          }\r\n          return null;\r\n        },\r\n\r\n        attachEvent: function (el, evnt, func) {\r\n          if (el.addEventListener) {\r\n            el.addEventListener(evnt, func, false);\r\n          } else if (el.attachEvent) {\r\n            el.attachEvent(\"on\" + evnt, func);\r\n          }\r\n        },\r\n\r\n        detachEvent: function (el, evnt, func) {\r\n          if (el.removeEventListener) {\r\n            el.removeEventListener(evnt, func, false);\r\n          } else if (el.detachEvent) {\r\n            el.detachEvent(\"on\" + evnt, func);\r\n          }\r\n        },\r\n\r\n        _attachedGroupEvents: {},\r\n\r\n        attachGroupEvent: function (groupName, el, evnt, func) {\r\n          if (!jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n            jsc._attachedGroupEvents[groupName] = [];\r\n          }\r\n          jsc._attachedGroupEvents[groupName].push([el, evnt, func]);\r\n          jsc.attachEvent(el, evnt, func);\r\n        },\r\n\r\n        detachGroupEvents: function (groupName) {\r\n          if (jsc._attachedGroupEvents.hasOwnProperty(groupName)) {\r\n            for (\r\n              var i = 0;\r\n              i < jsc._attachedGroupEvents[groupName].length;\r\n              i += 1\r\n            ) {\r\n              var evt = jsc._attachedGroupEvents[groupName][i];\r\n              jsc.detachEvent(evt[0], evt[1], evt[2]);\r\n            }\r\n            delete jsc._attachedGroupEvents[groupName];\r\n          }\r\n        },\r\n\r\n        attachDOMReadyEvent: function (func) {\r\n          var fired = false;\r\n          var fireOnce = function () {\r\n            if (!fired) {\r\n              fired = true;\r\n              func();\r\n            }\r\n          };\r\n\r\n          if (document.readyState === \"complete\") {\r\n            setTimeout(fireOnce, 1); // async\r\n            return;\r\n          }\r\n\r\n          if (document.addEventListener) {\r\n            document.addEventListener(\"DOMContentLoaded\", fireOnce, false);\r\n\r\n            // Fallback\r\n            window.addEventListener(\"load\", fireOnce, false);\r\n          } else if (document.attachEvent) {\r\n            // IE\r\n            document.attachEvent(\"onreadystatechange\", function () {\r\n              if (document.readyState === \"complete\") {\r\n                document.detachEvent(\"onreadystatechange\", arguments.callee);\r\n                fireOnce();\r\n              }\r\n            });\r\n\r\n            // Fallback\r\n            window.attachEvent(\"onload\", fireOnce);\r\n\r\n            // IE7/8\r\n            if (document.documentElement.doScroll && window == window.top) {\r\n              var tryScroll = function () {\r\n                if (!document.body) {\r\n                  return;\r\n                }\r\n                try {\r\n                  document.documentElement.doScroll(\"left\");\r\n                  fireOnce();\r\n                } catch (e) {\r\n                  setTimeout(tryScroll, 1);\r\n                }\r\n              };\r\n              tryScroll();\r\n            }\r\n          }\r\n        },\r\n\r\n        warn: function (msg) {\r\n          if (window.console && window.console.warn) {\r\n            window.console.warn(msg);\r\n          }\r\n        },\r\n\r\n        preventDefault: function (e) {\r\n          if (e.preventDefault) {\r\n            e.preventDefault();\r\n          }\r\n          e.returnValue = false;\r\n        },\r\n\r\n        captureTarget: function (target) {\r\n          // IE\r\n          if (target.setCapture) {\r\n            jsc._capturedTarget = target;\r\n            jsc._capturedTarget.setCapture();\r\n          }\r\n        },\r\n\r\n        releaseTarget: function () {\r\n          // IE\r\n          if (jsc._capturedTarget) {\r\n            jsc._capturedTarget.releaseCapture();\r\n            jsc._capturedTarget = null;\r\n          }\r\n        },\r\n\r\n        fireEvent: function (el, evnt) {\r\n          if (!el) {\r\n            return;\r\n          }\r\n          if (document.createEvent) {\r\n            var ev = document.createEvent(\"HTMLEvents\");\r\n            ev.initEvent(evnt, true, true);\r\n            el.dispatchEvent(ev);\r\n          } else if (document.createEventObject) {\r\n            var ev = document.createEventObject();\r\n            el.fireEvent(\"on\" + evnt, ev);\r\n          } else if (el[\"on\" + evnt]) {\r\n            // alternatively use the traditional event model\r\n            el[\"on\" + evnt]();\r\n          }\r\n        },\r\n\r\n        classNameToList: function (className) {\r\n          return className.replace(/^\\s+|\\s+$/g, \"\").split(/\\s+/);\r\n        },\r\n\r\n        // The className parameter (str) can only contain a single class name\r\n        hasClass: function (elm, className) {\r\n          if (!className) {\r\n            return false;\r\n          }\r\n          return (\r\n            -1 !=\r\n            (\" \" + elm.className.replace(/\\s+/g, \" \") + \" \").indexOf(\r\n              \" \" + className + \" \"\r\n            )\r\n          );\r\n        },\r\n\r\n        // The className parameter (str) can contain multiple class names separated by whitespace\r\n        setClass: function (elm, className) {\r\n          var classList = jsc.classNameToList(className);\r\n          for (var i = 0; i < classList.length; i += 1) {\r\n            if (!jsc.hasClass(elm, classList[i])) {\r\n              elm.className += (elm.className ? \" \" : \"\") + classList[i];\r\n            }\r\n          }\r\n        },\r\n\r\n        // The className parameter (str) can contain multiple class names separated by whitespace\r\n        unsetClass: function (elm, className) {\r\n          var classList = jsc.classNameToList(className);\r\n          for (var i = 0; i < classList.length; i += 1) {\r\n            var repl = new RegExp(\r\n              \"^\\\\s*\" +\r\n                classList[i] +\r\n                \"\\\\s*|\" +\r\n                \"\\\\s*\" +\r\n                classList[i] +\r\n                \"\\\\s*$|\" +\r\n                \"\\\\s+\" +\r\n                classList[i] +\r\n                \"(\\\\s+)\",\r\n              \"g\"\r\n            );\r\n            elm.className = elm.className.replace(repl, \"$1\");\r\n          }\r\n        },\r\n\r\n        getStyle: function (elm) {\r\n          return window.getComputedStyle\r\n            ? window.getComputedStyle(elm)\r\n            : elm.currentStyle;\r\n        },\r\n\r\n        setStyle: (function () {\r\n          var helper = document.createElement(\"div\");\r\n          var getSupportedProp = function (names) {\r\n            for (var i = 0; i < names.length; i += 1) {\r\n              if (names[i] in helper.style) {\r\n                return names[i];\r\n              }\r\n            }\r\n          };\r\n          var props = {\r\n            borderRadius: getSupportedProp([\r\n              \"borderRadius\",\r\n              \"MozBorderRadius\",\r\n              \"webkitBorderRadius\",\r\n            ]),\r\n            boxShadow: getSupportedProp([\r\n              \"boxShadow\",\r\n              \"MozBoxShadow\",\r\n              \"webkitBoxShadow\",\r\n            ]),\r\n          };\r\n          return function (elm, prop, value) {\r\n            switch (prop.toLowerCase()) {\r\n              case \"opacity\":\r\n                var alphaOpacity = Math.round(parseFloat(value) * 100);\r\n                elm.style.opacity = value;\r\n                elm.style.filter = \"alpha(opacity=\" + alphaOpacity + \")\";\r\n                break;\r\n              default:\r\n                elm.style[props[prop]] = value;\r\n                break;\r\n            }\r\n          };\r\n        })(),\r\n\r\n        setBorderRadius: function (elm, value) {\r\n          jsc.setStyle(elm, \"borderRadius\", value || \"0\");\r\n        },\r\n\r\n        setBoxShadow: function (elm, value) {\r\n          jsc.setStyle(elm, \"boxShadow\", value || \"none\");\r\n        },\r\n\r\n        getElementPos: function (e, relativeToViewport) {\r\n          var x = 0,\r\n            y = 0;\r\n          var rect = e.getBoundingClientRect();\r\n          x = rect.left;\r\n          y = rect.top;\r\n          if (!relativeToViewport) {\r\n            var viewPos = jsc.getViewPos();\r\n            x += viewPos[0];\r\n            y += viewPos[1];\r\n          }\r\n          return [x, y];\r\n        },\r\n\r\n        getElementSize: function (e) {\r\n          return [e.offsetWidth, e.offsetHeight];\r\n        },\r\n\r\n        // get pointer's X/Y coordinates relative to viewport\r\n        getAbsPointerPos: function (e) {\r\n          if (!e) {\r\n            e = window.event;\r\n          }\r\n          var x = 0,\r\n            y = 0;\r\n          if (\r\n            typeof e.changedTouches !== \"undefined\" &&\r\n            e.changedTouches.length\r\n          ) {\r\n            // touch devices\r\n            x = e.changedTouches[0].clientX;\r\n            y = e.changedTouches[0].clientY;\r\n          } else if (typeof e.clientX === \"number\") {\r\n            x = e.clientX;\r\n            y = e.clientY;\r\n          }\r\n          return { x: x, y: y };\r\n        },\r\n\r\n        // get pointer's X/Y coordinates relative to target element\r\n        getRelPointerPos: function (e) {\r\n          if (!e) {\r\n            e = window.event;\r\n          }\r\n          var target = e.target || e.srcElement;\r\n          var targetRect = target.getBoundingClientRect();\r\n\r\n          var x = 0,\r\n            y = 0;\r\n\r\n          var clientX = 0,\r\n            clientY = 0;\r\n          if (\r\n            typeof e.changedTouches !== \"undefined\" &&\r\n            e.changedTouches.length\r\n          ) {\r\n            // touch devices\r\n            clientX = e.changedTouches[0].clientX;\r\n            clientY = e.changedTouches[0].clientY;\r\n          } else if (typeof e.clientX === \"number\") {\r\n            clientX = e.clientX;\r\n            clientY = e.clientY;\r\n          }\r\n\r\n          x = clientX - targetRect.left;\r\n          y = clientY - targetRect.top;\r\n          return { x: x, y: y };\r\n        },\r\n\r\n        getViewPos: function () {\r\n          var doc = document.documentElement;\r\n          return [\r\n            (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0),\r\n            (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0),\r\n          ];\r\n        },\r\n\r\n        getViewSize: function () {\r\n          var doc = document.documentElement;\r\n          return [\r\n            window.innerWidth || doc.clientWidth,\r\n            window.innerHeight || doc.clientHeight,\r\n          ];\r\n        },\r\n\r\n        redrawPosition: function () {\r\n          if (jsc.picker && jsc.picker.owner) {\r\n            var thisObj = jsc.picker.owner;\r\n\r\n            var tp, vp;\r\n\r\n            if (thisObj.fixed) {\r\n              // Fixed elements are positioned relative to viewport,\r\n              // therefore we can ignore the scroll offset\r\n              tp = jsc.getElementPos(thisObj.targetElement, true); // target pos\r\n              vp = [0, 0]; // view pos\r\n            } else {\r\n              tp = jsc.getElementPos(thisObj.targetElement); // target pos\r\n              vp = jsc.getViewPos(); // view pos\r\n            }\r\n\r\n            var ts = jsc.getElementSize(thisObj.targetElement); // target size\r\n            var vs = jsc.getViewSize(); // view size\r\n            var ps = jsc.getPickerOuterDims(thisObj); // picker size\r\n            var a, b, c;\r\n            switch (thisObj.position.toLowerCase()) {\r\n              case \"left\":\r\n                a = 1;\r\n                b = 0;\r\n                c = -1;\r\n                break;\r\n              case \"right\":\r\n                a = 1;\r\n                b = 0;\r\n                c = 1;\r\n                break;\r\n              case \"top\":\r\n                a = 0;\r\n                b = 1;\r\n                c = -1;\r\n                break;\r\n              default:\r\n                a = 0;\r\n                b = 1;\r\n                c = 1;\r\n                break;\r\n            }\r\n            var l = (ts[b] + ps[b]) / 2;\r\n\r\n            // compute picker position\r\n            if (!thisObj.smartPosition) {\r\n              var pp = [tp[a], tp[b] + ts[b] - l + l * c];\r\n            } else {\r\n              var pp = [\r\n                -vp[a] + tp[a] + ps[a] > vs[a]\r\n                  ? -vp[a] + tp[a] + ts[a] / 2 > vs[a] / 2 &&\r\n                    tp[a] + ts[a] - ps[a] >= 0\r\n                    ? tp[a] + ts[a] - ps[a]\r\n                    : tp[a]\r\n                  : tp[a],\r\n                -vp[b] + tp[b] + ts[b] + ps[b] - l + l * c > vs[b]\r\n                  ? -vp[b] + tp[b] + ts[b] / 2 > vs[b] / 2 &&\r\n                    tp[b] + ts[b] - l - l * c >= 0\r\n                    ? tp[b] + ts[b] - l - l * c\r\n                    : tp[b] + ts[b] - l + l * c\r\n                  : tp[b] + ts[b] - l + l * c >= 0\r\n                  ? tp[b] + ts[b] - l + l * c\r\n                  : tp[b] + ts[b] - l - l * c,\r\n              ];\r\n            }\r\n\r\n            var x = pp[a];\r\n            var y = pp[b];\r\n            var positionValue = thisObj.fixed ? \"fixed\" : \"absolute\";\r\n            var contractShadow =\r\n              (pp[0] + ps[0] > tp[0] || pp[0] < tp[0] + ts[0]) &&\r\n              pp[1] + ps[1] < tp[1] + ts[1];\r\n\r\n            jsc._drawPosition(thisObj, x, y, positionValue, contractShadow);\r\n          }\r\n        },\r\n\r\n        _drawPosition: function (thisObj, x, y, positionValue, contractShadow) {\r\n          var vShadow = contractShadow ? 0 : thisObj.shadowBlur; // px\r\n\r\n          jsc.picker.wrap.style.position = positionValue;\r\n          jsc.picker.wrap.style.left = x + \"px\";\r\n          jsc.picker.wrap.style.top = y + \"px\";\r\n\r\n          jsc.setBoxShadow(\r\n            jsc.picker.boxS,\r\n            thisObj.shadow\r\n              ? new jsc.BoxShadow(\r\n                  0,\r\n                  vShadow,\r\n                  thisObj.shadowBlur,\r\n                  0,\r\n                  thisObj.shadowColor\r\n                )\r\n              : null\r\n          );\r\n        },\r\n\r\n        getPickerDims: function (thisObj) {\r\n          var displaySlider = !!jsc.getSliderComponent(thisObj);\r\n          var dims = [\r\n            2 * thisObj.insetWidth +\r\n              2 * thisObj.padding +\r\n              thisObj.width +\r\n              (displaySlider\r\n                ? 2 * thisObj.insetWidth +\r\n                  jsc.getPadToSliderPadding(thisObj) +\r\n                  thisObj.sliderSize\r\n                : 0),\r\n            2 * thisObj.insetWidth +\r\n              2 * thisObj.padding +\r\n              thisObj.height +\r\n              (thisObj.closable\r\n                ? 2 * thisObj.insetWidth +\r\n                  thisObj.padding +\r\n                  thisObj.buttonHeight\r\n                : 0),\r\n          ];\r\n          return dims;\r\n        },\r\n\r\n        getPickerOuterDims: function (thisObj) {\r\n          var dims = jsc.getPickerDims(thisObj);\r\n          return [\r\n            dims[0] + 2 * thisObj.borderWidth,\r\n            dims[1] + 2 * thisObj.borderWidth,\r\n          ];\r\n        },\r\n\r\n        getPadToSliderPadding: function (thisObj) {\r\n          return Math.max(\r\n            thisObj.padding,\r\n            1.5 * (2 * thisObj.pointerBorderWidth + thisObj.pointerThickness)\r\n          );\r\n        },\r\n\r\n        getPadYComponent: function (thisObj) {\r\n          switch (thisObj.mode.charAt(1).toLowerCase()) {\r\n            case \"v\":\r\n              return \"v\";\r\n              break;\r\n          }\r\n          return \"s\";\r\n        },\r\n\r\n        getSliderComponent: function (thisObj) {\r\n          if (thisObj.mode.length > 2) {\r\n            switch (thisObj.mode.charAt(2).toLowerCase()) {\r\n              case \"s\":\r\n                return \"s\";\r\n                break;\r\n              case \"v\":\r\n                return \"v\";\r\n                break;\r\n            }\r\n          }\r\n          return null;\r\n        },\r\n\r\n        onDocumentMouseDown: function (e) {\r\n          if (!e) {\r\n            e = window.event;\r\n          }\r\n          var target = e.target || e.srcElement;\r\n\r\n          if (target._jscLinkedInstance) {\r\n            if (target._jscLinkedInstance.showOnClick) {\r\n              target._jscLinkedInstance.show();\r\n            }\r\n          } else if (target._jscControlName) {\r\n            jsc.onControlPointerStart(\r\n              e,\r\n              target,\r\n              target._jscControlName,\r\n              \"mouse\"\r\n            );\r\n          } else {\r\n            // Mouse is outside the picker controls -> hide the color picker!\r\n            if (jsc.picker && jsc.picker.owner) {\r\n              jsc.picker.owner.hide();\r\n            }\r\n          }\r\n        },\r\n\r\n        onDocumentTouchStart: function (e) {\r\n          if (!e) {\r\n            e = window.event;\r\n          }\r\n          var target = e.target || e.srcElement;\r\n\r\n          if (target._jscLinkedInstance) {\r\n            if (target._jscLinkedInstance.showOnClick) {\r\n              target._jscLinkedInstance.show();\r\n            }\r\n          } else if (target._jscControlName) {\r\n            jsc.onControlPointerStart(\r\n              e,\r\n              target,\r\n              target._jscControlName,\r\n              \"touch\"\r\n            );\r\n          } else {\r\n            if (jsc.picker && jsc.picker.owner) {\r\n              jsc.picker.owner.hide();\r\n            }\r\n          }\r\n        },\r\n\r\n        onWindowResize: function (e) {\r\n          jsc.redrawPosition();\r\n        },\r\n\r\n        onParentScroll: function (e) {\r\n          // hide the picker when one of the parent elements is scrolled\r\n          if (jsc.picker && jsc.picker.owner) {\r\n            jsc.picker.owner.hide();\r\n          }\r\n        },\r\n\r\n        _pointerMoveEvent: {\r\n          mouse: \"mousemove\",\r\n          touch: \"touchmove\",\r\n        },\r\n        _pointerEndEvent: {\r\n          mouse: \"mouseup\",\r\n          touch: \"touchend\",\r\n        },\r\n\r\n        _pointerOrigin: null,\r\n        _capturedTarget: null,\r\n\r\n        onControlPointerStart: function (e, target, controlName, pointerType) {\r\n          var thisObj = target._jscInstance;\r\n\r\n          jsc.preventDefault(e);\r\n          jsc.captureTarget(target);\r\n\r\n          var registerDragEvents = function (doc, offset) {\r\n            jsc.attachGroupEvent(\r\n              \"drag\",\r\n              doc,\r\n              jsc._pointerMoveEvent[pointerType],\r\n              jsc.onDocumentPointerMove(\r\n                e,\r\n                target,\r\n                controlName,\r\n                pointerType,\r\n                offset\r\n              )\r\n            );\r\n            jsc.attachGroupEvent(\r\n              \"drag\",\r\n              doc,\r\n              jsc._pointerEndEvent[pointerType],\r\n              jsc.onDocumentPointerEnd(e, target, controlName, pointerType)\r\n            );\r\n          };\r\n\r\n          registerDragEvents(document, [0, 0]);\r\n\r\n          if (window.parent && window.frameElement) {\r\n            var rect = window.frameElement.getBoundingClientRect();\r\n            var ofs = [-rect.left, -rect.top];\r\n            registerDragEvents(window.parent.window.document, ofs);\r\n          }\r\n\r\n          var abs = jsc.getAbsPointerPos(e);\r\n          var rel = jsc.getRelPointerPos(e);\r\n          jsc._pointerOrigin = {\r\n            x: abs.x - rel.x,\r\n            y: abs.y - rel.y,\r\n          };\r\n\r\n          switch (controlName) {\r\n            case \"pad\":\r\n              // if the slider is at the bottom, move it up\r\n              switch (jsc.getSliderComponent(thisObj)) {\r\n                case \"s\":\r\n                  if (thisObj.hsv[1] === 0) {\r\n                    thisObj.fromHSV(null, 100, null);\r\n                  }\r\n                  break;\r\n                case \"v\":\r\n                  if (thisObj.hsv[2] === 0) {\r\n                    thisObj.fromHSV(null, null, 100);\r\n                  }\r\n                  break;\r\n              }\r\n              jsc.setPad(thisObj, e, 0, 0);\r\n              break;\r\n\r\n            case \"sld\":\r\n              jsc.setSld(thisObj, e, 0);\r\n              break;\r\n          }\r\n\r\n          jsc.dispatchFineChange(thisObj);\r\n        },\r\n\r\n        onDocumentPointerMove: function (\r\n          e,\r\n          target,\r\n          controlName,\r\n          pointerType,\r\n          offset\r\n        ) {\r\n          return function (e) {\r\n            var thisObj = target._jscInstance;\r\n            switch (controlName) {\r\n              case \"pad\":\r\n                if (!e) {\r\n                  e = window.event;\r\n                }\r\n                jsc.setPad(thisObj, e, offset[0], offset[1]);\r\n                jsc.dispatchFineChange(thisObj);\r\n                break;\r\n\r\n              case \"sld\":\r\n                if (!e) {\r\n                  e = window.event;\r\n                }\r\n                jsc.setSld(thisObj, e, offset[1]);\r\n                jsc.dispatchFineChange(thisObj);\r\n                break;\r\n            }\r\n          };\r\n        },\r\n\r\n        onDocumentPointerEnd: function (e, target, controlName, pointerType) {\r\n          return function (e) {\r\n            var thisObj = target._jscInstance;\r\n            jsc.detachGroupEvents(\"drag\");\r\n            jsc.releaseTarget();\r\n            // Always dispatch changes after detaching outstanding mouse handlers,\r\n            // in case some user interaction will occur in user's onchange callback\r\n            // that would intrude with current mouse events\r\n            jsc.dispatchChange(thisObj);\r\n          };\r\n        },\r\n\r\n        dispatchChange: function (thisObj) {\r\n          if (thisObj.valueElement) {\r\n            if (jsc.isElementType(thisObj.valueElement, \"input\")) {\r\n              jsc.fireEvent(thisObj.valueElement, \"change\");\r\n            }\r\n          }\r\n        },\r\n\r\n        dispatchFineChange: function (thisObj) {\r\n          if (thisObj.onFineChange) {\r\n            var callback;\r\n            if (typeof thisObj.onFineChange === \"string\") {\r\n              callback = new Function(thisObj.onFineChange);\r\n            } else {\r\n              callback = thisObj.onFineChange;\r\n            }\r\n            callback.call(thisObj);\r\n          }\r\n        },\r\n\r\n        setPad: function (thisObj, e, ofsX, ofsY) {\r\n          var pointerAbs = jsc.getAbsPointerPos(e);\r\n          var x =\r\n            ofsX +\r\n            pointerAbs.x -\r\n            jsc._pointerOrigin.x -\r\n            thisObj.padding -\r\n            thisObj.insetWidth;\r\n          var y =\r\n            ofsY +\r\n            pointerAbs.y -\r\n            jsc._pointerOrigin.y -\r\n            thisObj.padding -\r\n            thisObj.insetWidth;\r\n\r\n          var xVal = x * (360 / (thisObj.width - 1));\r\n          var yVal = 100 - y * (100 / (thisObj.height - 1));\r\n\r\n          switch (jsc.getPadYComponent(thisObj)) {\r\n            case \"s\":\r\n              thisObj.fromHSV(xVal, yVal, null, jsc.leaveSld);\r\n              break;\r\n            case \"v\":\r\n              thisObj.fromHSV(xVal, null, yVal, jsc.leaveSld);\r\n              break;\r\n          }\r\n        },\r\n\r\n        setSld: function (thisObj, e, ofsY) {\r\n          var pointerAbs = jsc.getAbsPointerPos(e);\r\n          var y =\r\n            ofsY +\r\n            pointerAbs.y -\r\n            jsc._pointerOrigin.y -\r\n            thisObj.padding -\r\n            thisObj.insetWidth;\r\n\r\n          var yVal = 100 - y * (100 / (thisObj.height - 1));\r\n\r\n          switch (jsc.getSliderComponent(thisObj)) {\r\n            case \"s\":\r\n              thisObj.fromHSV(null, yVal, null, jsc.leavePad);\r\n              break;\r\n            case \"v\":\r\n              thisObj.fromHSV(null, null, yVal, jsc.leavePad);\r\n              break;\r\n          }\r\n        },\r\n\r\n        _vmlNS: \"jsc_vml_\",\r\n        _vmlCSS: \"jsc_vml_css_\",\r\n        _vmlReady: false,\r\n\r\n        initVML: function () {\r\n          if (!jsc._vmlReady) {\r\n            // init VML namespace\r\n            var doc = document;\r\n            if (!doc.namespaces[jsc._vmlNS]) {\r\n              doc.namespaces.add(jsc._vmlNS, \"urn:schemas-microsoft-com:vml\");\r\n            }\r\n            if (!doc.styleSheets[jsc._vmlCSS]) {\r\n              var tags = [\r\n                \"shape\",\r\n                \"shapetype\",\r\n                \"group\",\r\n                \"background\",\r\n                \"path\",\r\n                \"formulas\",\r\n                \"handles\",\r\n                \"fill\",\r\n                \"stroke\",\r\n                \"shadow\",\r\n                \"textbox\",\r\n                \"textpath\",\r\n                \"imagedata\",\r\n                \"line\",\r\n                \"polyline\",\r\n                \"curve\",\r\n                \"rect\",\r\n                \"roundrect\",\r\n                \"oval\",\r\n                \"arc\",\r\n                \"image\",\r\n              ];\r\n              var ss = doc.createStyleSheet();\r\n              ss.owningElement.id = jsc._vmlCSS;\r\n              for (var i = 0; i < tags.length; i += 1) {\r\n                ss.addRule(\r\n                  jsc._vmlNS + \"\\\\:\" + tags[i],\r\n                  \"behavior:url(#default#VML);\"\r\n                );\r\n              }\r\n            }\r\n            jsc._vmlReady = true;\r\n          }\r\n        },\r\n\r\n        createPalette: function () {\r\n          var paletteObj = {\r\n            elm: null,\r\n            draw: null,\r\n          };\r\n\r\n          if (jsc.isCanvasSupported) {\r\n            // Canvas implementation for modern browsers\r\n\r\n            var canvas = document.createElement(\"canvas\");\r\n            var ctx = canvas.getContext(\"2d\");\r\n\r\n            var drawFunc = function (width, height, type) {\r\n              canvas.width = width;\r\n              canvas.height = height;\r\n\r\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n              var hGrad = ctx.createLinearGradient(0, 0, canvas.width, 0);\r\n              hGrad.addColorStop(0 / 6, \"#F00\");\r\n              hGrad.addColorStop(1 / 6, \"#FF0\");\r\n              hGrad.addColorStop(2 / 6, \"#0F0\");\r\n              hGrad.addColorStop(3 / 6, \"#0FF\");\r\n              hGrad.addColorStop(4 / 6, \"#00F\");\r\n              hGrad.addColorStop(5 / 6, \"#F0F\");\r\n              hGrad.addColorStop(6 / 6, \"#F00\");\r\n\r\n              ctx.fillStyle = hGrad;\r\n              ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n              var vGrad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n              switch (type.toLowerCase()) {\r\n                case \"s\":\r\n                  vGrad.addColorStop(0, \"rgba(255,255,255,0)\");\r\n                  vGrad.addColorStop(1, \"rgba(255,255,255,1)\");\r\n                  break;\r\n                case \"v\":\r\n                  vGrad.addColorStop(0, \"rgba(0,0,0,0)\");\r\n                  vGrad.addColorStop(1, \"rgba(0,0,0,1)\");\r\n                  break;\r\n              }\r\n              ctx.fillStyle = vGrad;\r\n              ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            };\r\n\r\n            paletteObj.elm = canvas;\r\n            paletteObj.draw = drawFunc;\r\n          } else {\r\n            // VML fallback for IE 7 and 8\r\n\r\n            jsc.initVML();\r\n\r\n            var vmlContainer = document.createElement(\"div\");\r\n            vmlContainer.style.position = \"relative\";\r\n            vmlContainer.style.overflow = \"hidden\";\r\n\r\n            var hGrad = document.createElement(jsc._vmlNS + \":fill\");\r\n            hGrad.type = \"gradient\";\r\n            hGrad.method = \"linear\";\r\n            hGrad.angle = \"90\";\r\n            hGrad.colors =\r\n              \"16.67% #F0F, 33.33% #00F, 50% #0FF, 66.67% #0F0, 83.33% #FF0\";\r\n\r\n            var hRect = document.createElement(jsc._vmlNS + \":rect\");\r\n            hRect.style.position = \"absolute\";\r\n            hRect.style.left = -1 + \"px\";\r\n            hRect.style.top = -1 + \"px\";\r\n            hRect.stroked = false;\r\n            hRect.appendChild(hGrad);\r\n            vmlContainer.appendChild(hRect);\r\n\r\n            var vGrad = document.createElement(jsc._vmlNS + \":fill\");\r\n            vGrad.type = \"gradient\";\r\n            vGrad.method = \"linear\";\r\n            vGrad.angle = \"180\";\r\n            vGrad.opacity = \"0\";\r\n\r\n            var vRect = document.createElement(jsc._vmlNS + \":rect\");\r\n            vRect.style.position = \"absolute\";\r\n            vRect.style.left = -1 + \"px\";\r\n            vRect.style.top = -1 + \"px\";\r\n            vRect.stroked = false;\r\n            vRect.appendChild(vGrad);\r\n            vmlContainer.appendChild(vRect);\r\n\r\n            var drawFunc = function (width, height, type) {\r\n              vmlContainer.style.width = width + \"px\";\r\n              vmlContainer.style.height = height + \"px\";\r\n\r\n              hRect.style.width = vRect.style.width = width + 1 + \"px\";\r\n              hRect.style.height = vRect.style.height = height + 1 + \"px\";\r\n\r\n              // Colors must be specified during every redraw, otherwise IE won't display\r\n              // a full gradient during a subsequential redraw\r\n              hGrad.color = \"#F00\";\r\n              hGrad.color2 = \"#F00\";\r\n\r\n              switch (type.toLowerCase()) {\r\n                case \"s\":\r\n                  vGrad.color = vGrad.color2 = \"#FFF\";\r\n                  break;\r\n                case \"v\":\r\n                  vGrad.color = vGrad.color2 = \"#000\";\r\n                  break;\r\n              }\r\n            };\r\n\r\n            paletteObj.elm = vmlContainer;\r\n            paletteObj.draw = drawFunc;\r\n          }\r\n\r\n          return paletteObj;\r\n        },\r\n\r\n        createSliderGradient: function () {\r\n          var sliderObj = {\r\n            elm: null,\r\n            draw: null,\r\n          };\r\n\r\n          if (jsc.isCanvasSupported) {\r\n            // Canvas implementation for modern browsers\r\n\r\n            var canvas = document.createElement(\"canvas\");\r\n            var ctx = canvas.getContext(\"2d\");\r\n\r\n            var drawFunc = function (width, height, color1, color2) {\r\n              canvas.width = width;\r\n              canvas.height = height;\r\n\r\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n              var grad = ctx.createLinearGradient(0, 0, 0, canvas.height);\r\n              grad.addColorStop(0, color1);\r\n              grad.addColorStop(1, color2);\r\n\r\n              ctx.fillStyle = grad;\r\n              ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n            };\r\n\r\n            sliderObj.elm = canvas;\r\n            sliderObj.draw = drawFunc;\r\n          } else {\r\n            // VML fallback for IE 7 and 8\r\n\r\n            jsc.initVML();\r\n\r\n            var vmlContainer = document.createElement(\"div\");\r\n            vmlContainer.style.position = \"relative\";\r\n            vmlContainer.style.overflow = \"hidden\";\r\n\r\n            var grad = document.createElement(jsc._vmlNS + \":fill\");\r\n            grad.type = \"gradient\";\r\n            grad.method = \"linear\";\r\n            grad.angle = \"180\";\r\n\r\n            var rect = document.createElement(jsc._vmlNS + \":rect\");\r\n            rect.style.position = \"absolute\";\r\n            rect.style.left = -1 + \"px\";\r\n            rect.style.top = -1 + \"px\";\r\n            rect.stroked = false;\r\n            rect.appendChild(grad);\r\n            vmlContainer.appendChild(rect);\r\n\r\n            var drawFunc = function (width, height, color1, color2) {\r\n              vmlContainer.style.width = width + \"px\";\r\n              vmlContainer.style.height = height + \"px\";\r\n\r\n              rect.style.width = width + 1 + \"px\";\r\n              rect.style.height = height + 1 + \"px\";\r\n\r\n              grad.color = color1;\r\n              grad.color2 = color2;\r\n            };\r\n\r\n            sliderObj.elm = vmlContainer;\r\n            sliderObj.draw = drawFunc;\r\n          }\r\n\r\n          return sliderObj;\r\n        },\r\n\r\n        leaveValue: 1 << 0,\r\n        leaveStyle: 1 << 1,\r\n        leavePad: 1 << 2,\r\n        leaveSld: 1 << 3,\r\n\r\n        BoxShadow: (function () {\r\n          var BoxShadow = function (\r\n            hShadow,\r\n            vShadow,\r\n            blur,\r\n            spread,\r\n            color,\r\n            inset\r\n          ) {\r\n            this.hShadow = hShadow;\r\n            this.vShadow = vShadow;\r\n            this.blur = blur;\r\n            this.spread = spread;\r\n            this.color = color;\r\n            this.inset = !!inset;\r\n          };\r\n\r\n          BoxShadow.prototype.toString = function () {\r\n            var vals = [\r\n              Math.round(this.hShadow) + \"px\",\r\n              Math.round(this.vShadow) + \"px\",\r\n              Math.round(this.blur) + \"px\",\r\n              Math.round(this.spread) + \"px\",\r\n              this.color,\r\n            ];\r\n            if (this.inset) {\r\n              vals.push(\"inset\");\r\n            }\r\n            return vals.join(\" \");\r\n          };\r\n\r\n          return BoxShadow;\r\n        })(),\r\n\r\n        //\r\n        // Usage:\r\n        // var myColor = new jscolor(<targetElement> [, <options>])\r\n        //\r\n\r\n        jscolor: function (targetElement, options) {\r\n          // General options\r\n          //\r\n          this.value = null; // initial HEX color. To change it later, use methods fromString(), fromHSV() and fromRGB()\r\n          this.valueElement = targetElement; // element that will be used to display and input the color code\r\n          this.styleElement = targetElement; // element that will preview the picked color using CSS backgroundColor\r\n          this.required = true; // whether the associated text <input> can be left empty\r\n          this.refine = true; // whether to refine the entered color code (e.g. uppercase it and remove whitespace)\r\n          this.hash = false; // whether to prefix the HEX color code with # symbol\r\n          this.uppercase = true; // whether to show the color code in upper case\r\n          this.onFineChange = null; // called instantly every time the color changes (value can be either a function or a string with javascript code)\r\n          this.activeClass = \"jscolor-active\"; // class to be set to the target element when a picker window is open on it\r\n          this.overwriteImportant = false; // whether to overwrite colors of styleElement using !important\r\n          this.minS = 0; // min allowed saturation (0 - 100)\r\n          this.maxS = 100; // max allowed saturation (0 - 100)\r\n          this.minV = 0; // min allowed value (brightness) (0 - 100)\r\n          this.maxV = 100; // max allowed value (brightness) (0 - 100)\r\n\r\n          // Accessing the picked color\r\n          //\r\n          this.hsv = [0, 0, 100]; // read-only  [0-360, 0-100, 0-100]\r\n          this.rgb = [255, 255, 255]; // read-only  [0-255, 0-255, 0-255]\r\n\r\n          // Color Picker options\r\n          //\r\n          this.width = 181; // width of color palette (in px)\r\n          this.height = 101; // height of color palette (in px)\r\n          this.showOnClick = true; // whether to display the color picker when user clicks on its target element\r\n          this.mode = \"HSV\"; // HSV | HVS | HS | HV - layout of the color picker controls\r\n          this.position = \"bottom\"; // left | right | top | bottom - position relative to the target element\r\n          this.smartPosition = true; // automatically change picker position when there is not enough space for it\r\n          this.sliderSize = 16; // px\r\n          this.crossSize = 8; // px\r\n          this.closable = false; // whether to display the Close button\r\n          this.closeText = \"Close\";\r\n          this.buttonColor = \"#000000\"; // CSS color\r\n          this.buttonHeight = 18; // px\r\n          this.padding = 12; // px\r\n          this.backgroundColor = \"#FFFFFF\"; // CSS color\r\n          this.borderWidth = 1; // px\r\n          this.borderColor = \"#BBBBBB\"; // CSS color\r\n          this.borderRadius = 8; // px\r\n          this.insetWidth = 1; // px\r\n          this.insetColor = \"#BBBBBB\"; // CSS color\r\n          this.shadow = true; // whether to display shadow\r\n          this.shadowBlur = 15; // px\r\n          this.shadowColor = \"rgba(0,0,0,0.2)\"; // CSS color\r\n          this.pointerColor = \"#4C4C4C\"; // px\r\n          this.pointerBorderColor = \"#FFFFFF\"; // px\r\n          this.pointerBorderWidth = 1; // px\r\n          this.pointerThickness = 2; // px\r\n          this.zIndex = 1000;\r\n          this.container = null; // where to append the color picker (BODY element by default)\r\n\r\n          for (var opt in options) {\r\n            if (options.hasOwnProperty(opt)) {\r\n              this[opt] = options[opt];\r\n            }\r\n          }\r\n\r\n          this.hide = function () {\r\n            if (isPickerOwner()) {\r\n              detachPicker();\r\n            }\r\n          };\r\n\r\n          this.show = function () {\r\n            drawPicker();\r\n          };\r\n\r\n          this.redraw = function () {\r\n            if (isPickerOwner()) {\r\n              drawPicker();\r\n            }\r\n          };\r\n\r\n          this.importColor = function () {\r\n            if (!this.valueElement) {\r\n              this.exportColor();\r\n            } else {\r\n              if (jsc.isElementType(this.valueElement, \"input\")) {\r\n                if (!this.refine) {\r\n                  if (\r\n                    !this.fromString(this.valueElement.value, jsc.leaveValue)\r\n                  ) {\r\n                    if (this.styleElement) {\r\n                      this.styleElement.style.backgroundImage =\r\n                        this.styleElement._jscOrigStyle.backgroundImage;\r\n                      this.styleElement.style.backgroundColor =\r\n                        this.styleElement._jscOrigStyle.backgroundColor;\r\n                      this.styleElement.style.color =\r\n                        this.styleElement._jscOrigStyle.color;\r\n                    }\r\n                    this.exportColor(jsc.leaveValue | jsc.leaveStyle);\r\n                  }\r\n                } else if (\r\n                  !this.required &&\r\n                  /^\\s*$/.test(this.valueElement.value)\r\n                ) {\r\n                  this.valueElement.value = \"\";\r\n                  if (this.styleElement) {\r\n                    this.styleElement.style.backgroundImage =\r\n                      this.styleElement._jscOrigStyle.backgroundImage;\r\n                    this.styleElement.style.backgroundColor =\r\n                      this.styleElement._jscOrigStyle.backgroundColor;\r\n                    this.styleElement.style.color =\r\n                      this.styleElement._jscOrigStyle.color;\r\n                  }\r\n                  this.exportColor(jsc.leaveValue | jsc.leaveStyle);\r\n                } else if (this.fromString(this.valueElement.value)) {\r\n                  // managed to import color successfully from the value -> OK, don't do anything\r\n                } else {\r\n                  this.exportColor();\r\n                }\r\n              } else {\r\n                // not an input element -> doesn't have any value\r\n                this.exportColor();\r\n              }\r\n            }\r\n          };\r\n\r\n          this.exportColor = function (flags) {\r\n            if (!(flags & jsc.leaveValue) && this.valueElement) {\r\n              var value = this.toString();\r\n              if (this.uppercase) {\r\n                value = value.toUpperCase();\r\n              }\r\n              if (this.hash) {\r\n                value = \"#\" + value;\r\n              }\r\n\r\n              if (jsc.isElementType(this.valueElement, \"input\")) {\r\n                this.valueElement.value = value;\r\n              } else {\r\n                this.valueElement.innerHTML = value;\r\n              }\r\n            }\r\n            if (!(flags & jsc.leaveStyle)) {\r\n              if (this.styleElement) {\r\n                var bgColor = \"#\" + this.toString();\r\n                var fgColor = this.isLight() ? \"#000\" : \"#FFF\";\r\n\r\n                this.styleElement.style.backgroundImage = \"none\";\r\n                this.styleElement.style.backgroundColor = bgColor;\r\n                this.styleElement.style.color = fgColor;\r\n\r\n                if (this.overwriteImportant) {\r\n                  this.styleElement.setAttribute(\r\n                    \"style\",\r\n                    \"background: \" +\r\n                      bgColor +\r\n                      \" !important; \" +\r\n                      \"color: \" +\r\n                      fgColor +\r\n                      \" !important;\"\r\n                  );\r\n                }\r\n              }\r\n            }\r\n            if (!(flags & jsc.leavePad) && isPickerOwner()) {\r\n              redrawPad();\r\n            }\r\n            if (!(flags & jsc.leaveSld) && isPickerOwner()) {\r\n              redrawSld();\r\n            }\r\n          };\r\n\r\n          // h: 0-360\r\n          // s: 0-100\r\n          // v: 0-100\r\n          //\r\n          this.fromHSV = function (h, s, v, flags) {\r\n            // null = don't change\r\n            if (h !== null) {\r\n              if (isNaN(h)) {\r\n                return false;\r\n              }\r\n              h = Math.max(0, Math.min(360, h));\r\n            }\r\n            if (s !== null) {\r\n              if (isNaN(s)) {\r\n                return false;\r\n              }\r\n              s = Math.max(0, Math.min(100, this.maxS, s), this.minS);\r\n            }\r\n            if (v !== null) {\r\n              if (isNaN(v)) {\r\n                return false;\r\n              }\r\n              v = Math.max(0, Math.min(100, this.maxV, v), this.minV);\r\n            }\r\n\r\n            this.rgb = HSV_RGB(\r\n              h === null ? this.hsv[0] : (this.hsv[0] = h),\r\n              s === null ? this.hsv[1] : (this.hsv[1] = s),\r\n              v === null ? this.hsv[2] : (this.hsv[2] = v)\r\n            );\r\n\r\n            this.exportColor(flags);\r\n          };\r\n\r\n          // r: 0-255\r\n          // g: 0-255\r\n          // b: 0-255\r\n          //\r\n          this.fromRGB = function (r, g, b, flags) {\r\n            // null = don't change\r\n            if (r !== null) {\r\n              if (isNaN(r)) {\r\n                return false;\r\n              }\r\n              r = Math.max(0, Math.min(255, r));\r\n            }\r\n            if (g !== null) {\r\n              if (isNaN(g)) {\r\n                return false;\r\n              }\r\n              g = Math.max(0, Math.min(255, g));\r\n            }\r\n            if (b !== null) {\r\n              if (isNaN(b)) {\r\n                return false;\r\n              }\r\n              b = Math.max(0, Math.min(255, b));\r\n            }\r\n\r\n            var hsv = RGB_HSV(\r\n              r === null ? this.rgb[0] : r,\r\n              g === null ? this.rgb[1] : g,\r\n              b === null ? this.rgb[2] : b\r\n            );\r\n            if (hsv[0] !== null) {\r\n              this.hsv[0] = Math.max(0, Math.min(360, hsv[0]));\r\n            }\r\n            if (hsv[2] !== 0) {\r\n              this.hsv[1] =\r\n                hsv[1] === null\r\n                  ? null\r\n                  : Math.max(0, this.minS, Math.min(100, this.maxS, hsv[1]));\r\n            }\r\n            this.hsv[2] =\r\n              hsv[2] === null\r\n                ? null\r\n                : Math.max(0, this.minV, Math.min(100, this.maxV, hsv[2]));\r\n\r\n            // update RGB according to final HSV, as some values might be trimmed\r\n            var rgb = HSV_RGB(this.hsv[0], this.hsv[1], this.hsv[2]);\r\n            this.rgb[0] = rgb[0];\r\n            this.rgb[1] = rgb[1];\r\n            this.rgb[2] = rgb[2];\r\n\r\n            this.exportColor(flags);\r\n          };\r\n\r\n          this.fromString = function (str, flags) {\r\n            var m;\r\n            if ((m = str.match(/^\\W*([0-9A-F]{3}([0-9A-F]{3})?)\\W*$/i))) {\r\n              // HEX notation\r\n              //\r\n\r\n              if (m[1].length === 6) {\r\n                // 6-char notation\r\n                this.fromRGB(\r\n                  parseInt(m[1].substr(0, 2), 16),\r\n                  parseInt(m[1].substr(2, 2), 16),\r\n                  parseInt(m[1].substr(4, 2), 16),\r\n                  flags\r\n                );\r\n              } else {\r\n                // 3-char notation\r\n                this.fromRGB(\r\n                  parseInt(m[1].charAt(0) + m[1].charAt(0), 16),\r\n                  parseInt(m[1].charAt(1) + m[1].charAt(1), 16),\r\n                  parseInt(m[1].charAt(2) + m[1].charAt(2), 16),\r\n                  flags\r\n                );\r\n              }\r\n              return true;\r\n            } else if ((m = str.match(/^\\W*rgba?\\(([^)]*)\\)\\W*$/i))) {\r\n              var params = m[1].split(\",\");\r\n              var re = /^\\s*(\\d*)(\\.\\d+)?\\s*$/;\r\n              var mR, mG, mB;\r\n              if (\r\n                params.length >= 3 &&\r\n                (mR = params[0].match(re)) &&\r\n                (mG = params[1].match(re)) &&\r\n                (mB = params[2].match(re))\r\n              ) {\r\n                var r = parseFloat((mR[1] || \"0\") + (mR[2] || \"\"));\r\n                var g = parseFloat((mG[1] || \"0\") + (mG[2] || \"\"));\r\n                var b = parseFloat((mB[1] || \"0\") + (mB[2] || \"\"));\r\n                this.fromRGB(r, g, b, flags);\r\n                return true;\r\n              }\r\n            }\r\n            return false;\r\n          };\r\n\r\n          this.toString = function () {\r\n            return (\r\n              (0x100 | Math.round(this.rgb[0])).toString(16).substr(1) +\r\n              (0x100 | Math.round(this.rgb[1])).toString(16).substr(1) +\r\n              (0x100 | Math.round(this.rgb[2])).toString(16).substr(1)\r\n            );\r\n          };\r\n\r\n          this.toHEXString = function () {\r\n            return \"#\" + this.toString().toUpperCase();\r\n          };\r\n\r\n          this.toRGBString = function () {\r\n            return (\r\n              \"rgb(\" +\r\n              Math.round(this.rgb[0]) +\r\n              \",\" +\r\n              Math.round(this.rgb[1]) +\r\n              \",\" +\r\n              Math.round(this.rgb[2]) +\r\n              \")\"\r\n            );\r\n          };\r\n\r\n          this.isLight = function () {\r\n            return (\r\n              0.213 * this.rgb[0] + 0.715 * this.rgb[1] + 0.072 * this.rgb[2] >\r\n              255 / 2\r\n            );\r\n          };\r\n\r\n          this._processParentElementsInDOM = function () {\r\n            if (this._linkedElementsProcessed) {\r\n              return;\r\n            }\r\n            this._linkedElementsProcessed = true;\r\n\r\n            var elm = this.targetElement;\r\n            do {\r\n              // If the target element or one of its parent nodes has fixed position,\r\n              // then use fixed positioning instead\r\n              //\r\n              // Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n              // that's why we need to check if the returned style object is non-empty\r\n              var currStyle = jsc.getStyle(elm);\r\n              if (currStyle && currStyle.position.toLowerCase() === \"fixed\") {\r\n                this.fixed = true;\r\n              }\r\n\r\n              if (elm !== this.targetElement) {\r\n                // Ensure to attach onParentScroll only once to each parent element\r\n                // (multiple targetElements can share the same parent nodes)\r\n                //\r\n                // Note: It's not just offsetParents that can be scrollable,\r\n                // that's why we loop through all parent nodes\r\n                if (!elm._jscEventsAttached) {\r\n                  jsc.attachEvent(elm, \"scroll\", jsc.onParentScroll);\r\n                  elm._jscEventsAttached = true;\r\n                }\r\n              }\r\n            } while ((elm = elm.parentNode) && !jsc.isElementType(elm, \"body\"));\r\n          };\r\n\r\n          // r: 0-255\r\n          // g: 0-255\r\n          // b: 0-255\r\n          //\r\n          // returns: [ 0-360, 0-100, 0-100 ]\r\n          //\r\n          function RGB_HSV(r, g, b) {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n            var n = Math.min(Math.min(r, g), b);\r\n            var v = Math.max(Math.max(r, g), b);\r\n            var m = v - n;\r\n            if (m === 0) {\r\n              return [null, 0, 100 * v];\r\n            }\r\n            var h =\r\n              r === n\r\n                ? 3 + (b - g) / m\r\n                : g === n\r\n                ? 5 + (r - b) / m\r\n                : 1 + (g - r) / m;\r\n            return [60 * (h === 6 ? 0 : h), 100 * (m / v), 100 * v];\r\n          }\r\n\r\n          // h: 0-360\r\n          // s: 0-100\r\n          // v: 0-100\r\n          //\r\n          // returns: [ 0-255, 0-255, 0-255 ]\r\n          //\r\n          function HSV_RGB(h, s, v) {\r\n            var u = 255 * (v / 100);\r\n\r\n            if (h === null) {\r\n              return [u, u, u];\r\n            }\r\n\r\n            h /= 60;\r\n            s /= 100;\r\n\r\n            var i = Math.floor(h);\r\n            var f = i % 2 ? h - i : 1 - (h - i);\r\n            var m = u * (1 - s);\r\n            var n = u * (1 - s * f);\r\n            switch (i) {\r\n              case 6:\r\n              case 0:\r\n                return [u, n, m];\r\n              case 1:\r\n                return [n, u, m];\r\n              case 2:\r\n                return [m, u, n];\r\n              case 3:\r\n                return [m, n, u];\r\n              case 4:\r\n                return [n, m, u];\r\n              case 5:\r\n                return [u, m, n];\r\n            }\r\n          }\r\n\r\n          function detachPicker() {\r\n            jsc.unsetClass(THIS.targetElement, THIS.activeClass);\r\n            jsc.picker.wrap.parentNode.removeChild(jsc.picker.wrap);\r\n            delete jsc.picker.owner;\r\n          }\r\n\r\n          function drawPicker() {\r\n            // At this point, when drawing the picker, we know what the parent elements are\r\n            // and we can do all related DOM operations, such as registering events on them\r\n            // or checking their positioning\r\n            THIS._processParentElementsInDOM();\r\n\r\n            if (!jsc.picker) {\r\n              jsc.picker = {\r\n                owner: null,\r\n                wrap: document.createElement(\"div\"),\r\n                box: document.createElement(\"div\"),\r\n                boxS: document.createElement(\"div\"), // shadow area\r\n                boxB: document.createElement(\"div\"), // border\r\n                pad: document.createElement(\"div\"),\r\n                padB: document.createElement(\"div\"), // border\r\n                padM: document.createElement(\"div\"), // mouse/touch area\r\n                padPal: jsc.createPalette(),\r\n                cross: document.createElement(\"div\"),\r\n                crossBY: document.createElement(\"div\"), // border Y\r\n                crossBX: document.createElement(\"div\"), // border X\r\n                crossLY: document.createElement(\"div\"), // line Y\r\n                crossLX: document.createElement(\"div\"), // line X\r\n                sld: document.createElement(\"div\"),\r\n                sldB: document.createElement(\"div\"), // border\r\n                sldM: document.createElement(\"div\"), // mouse/touch area\r\n                sldGrad: jsc.createSliderGradient(),\r\n                sldPtrS: document.createElement(\"div\"), // slider pointer spacer\r\n                sldPtrIB: document.createElement(\"div\"), // slider pointer inner border\r\n                sldPtrMB: document.createElement(\"div\"), // slider pointer middle border\r\n                sldPtrOB: document.createElement(\"div\"), // slider pointer outer border\r\n                btn: document.createElement(\"div\"),\r\n                btnT: document.createElement(\"span\"), // text\r\n              };\r\n\r\n              jsc.picker.pad.appendChild(jsc.picker.padPal.elm);\r\n              jsc.picker.padB.appendChild(jsc.picker.pad);\r\n              jsc.picker.cross.appendChild(jsc.picker.crossBY);\r\n              jsc.picker.cross.appendChild(jsc.picker.crossBX);\r\n              jsc.picker.cross.appendChild(jsc.picker.crossLY);\r\n              jsc.picker.cross.appendChild(jsc.picker.crossLX);\r\n              jsc.picker.padB.appendChild(jsc.picker.cross);\r\n              jsc.picker.box.appendChild(jsc.picker.padB);\r\n              jsc.picker.box.appendChild(jsc.picker.padM);\r\n\r\n              jsc.picker.sld.appendChild(jsc.picker.sldGrad.elm);\r\n              jsc.picker.sldB.appendChild(jsc.picker.sld);\r\n              jsc.picker.sldB.appendChild(jsc.picker.sldPtrOB);\r\n              jsc.picker.sldPtrOB.appendChild(jsc.picker.sldPtrMB);\r\n              jsc.picker.sldPtrMB.appendChild(jsc.picker.sldPtrIB);\r\n              jsc.picker.sldPtrIB.appendChild(jsc.picker.sldPtrS);\r\n              jsc.picker.box.appendChild(jsc.picker.sldB);\r\n              jsc.picker.box.appendChild(jsc.picker.sldM);\r\n\r\n              jsc.picker.btn.appendChild(jsc.picker.btnT);\r\n              jsc.picker.box.appendChild(jsc.picker.btn);\r\n\r\n              jsc.picker.boxB.appendChild(jsc.picker.box);\r\n              jsc.picker.wrap.appendChild(jsc.picker.boxS);\r\n              jsc.picker.wrap.appendChild(jsc.picker.boxB);\r\n            }\r\n\r\n            var p = jsc.picker;\r\n\r\n            var displaySlider = !!jsc.getSliderComponent(THIS);\r\n            var dims = jsc.getPickerDims(THIS);\r\n            var crossOuterSize =\r\n              2 * THIS.pointerBorderWidth +\r\n              THIS.pointerThickness +\r\n              2 * THIS.crossSize;\r\n            var padToSliderPadding = jsc.getPadToSliderPadding(THIS);\r\n            var borderRadius = Math.min(\r\n              THIS.borderRadius,\r\n              Math.round(THIS.padding * Math.PI)\r\n            ); // px\r\n            var padCursor = \"crosshair\";\r\n\r\n            // wrap\r\n            p.wrap.style.clear = \"both\";\r\n            p.wrap.style.width = dims[0] + 2 * THIS.borderWidth + \"px\";\r\n            p.wrap.style.height = dims[1] + 2 * THIS.borderWidth + \"px\";\r\n            p.wrap.style.zIndex = THIS.zIndex;\r\n\r\n            // picker\r\n            p.box.style.width = dims[0] + \"px\";\r\n            p.box.style.height = dims[1] + \"px\";\r\n\r\n            p.boxS.style.position = \"absolute\";\r\n            p.boxS.style.left = \"0\";\r\n            p.boxS.style.top = \"0\";\r\n            p.boxS.style.width = \"100%\";\r\n            p.boxS.style.height = \"100%\";\r\n            jsc.setBorderRadius(p.boxS, borderRadius + \"px\");\r\n\r\n            // picker border\r\n            p.boxB.style.position = \"relative\";\r\n            p.boxB.style.border = THIS.borderWidth + \"px solid\";\r\n            p.boxB.style.borderColor = THIS.borderColor;\r\n            p.boxB.style.background = THIS.backgroundColor;\r\n            jsc.setBorderRadius(p.boxB, borderRadius + \"px\");\r\n\r\n            // IE hack:\r\n            // If the element is transparent, IE will trigger the event on the elements under it,\r\n            // e.g. on Canvas or on elements with border\r\n            p.padM.style.background = p.sldM.style.background = \"#FFF\";\r\n            jsc.setStyle(p.padM, \"opacity\", \"0\");\r\n            jsc.setStyle(p.sldM, \"opacity\", \"0\");\r\n\r\n            // pad\r\n            p.pad.style.position = \"relative\";\r\n            p.pad.style.width = THIS.width + \"px\";\r\n            p.pad.style.height = THIS.height + \"px\";\r\n\r\n            // pad palettes (HSV and HVS)\r\n            p.padPal.draw(THIS.width, THIS.height, jsc.getPadYComponent(THIS));\r\n\r\n            // pad border\r\n            p.padB.style.position = \"absolute\";\r\n            p.padB.style.left = THIS.padding + \"px\";\r\n            p.padB.style.top = THIS.padding + \"px\";\r\n            p.padB.style.border = THIS.insetWidth + \"px solid\";\r\n            p.padB.style.borderColor = THIS.insetColor;\r\n\r\n            // pad mouse area\r\n            p.padM._jscInstance = THIS;\r\n            p.padM._jscControlName = \"pad\";\r\n            p.padM.style.position = \"absolute\";\r\n            p.padM.style.left = \"0\";\r\n            p.padM.style.top = \"0\";\r\n            p.padM.style.width =\r\n              THIS.padding +\r\n              2 * THIS.insetWidth +\r\n              THIS.width +\r\n              padToSliderPadding / 2 +\r\n              \"px\";\r\n            p.padM.style.height = dims[1] + \"px\";\r\n            p.padM.style.cursor = padCursor;\r\n\r\n            // pad cross\r\n            p.cross.style.position = \"absolute\";\r\n            p.cross.style.left = p.cross.style.top = \"0\";\r\n            p.cross.style.width = p.cross.style.height = crossOuterSize + \"px\";\r\n\r\n            // pad cross border Y and X\r\n            p.crossBY.style.position = p.crossBX.style.position = \"absolute\";\r\n            p.crossBY.style.background = p.crossBX.style.background =\r\n              THIS.pointerBorderColor;\r\n            p.crossBY.style.width = p.crossBX.style.height =\r\n              2 * THIS.pointerBorderWidth + THIS.pointerThickness + \"px\";\r\n            p.crossBY.style.height = p.crossBX.style.width =\r\n              crossOuterSize + \"px\";\r\n            p.crossBY.style.left = p.crossBX.style.top =\r\n              Math.floor(crossOuterSize / 2) -\r\n              Math.floor(THIS.pointerThickness / 2) -\r\n              THIS.pointerBorderWidth +\r\n              \"px\";\r\n            p.crossBY.style.top = p.crossBX.style.left = \"0\";\r\n\r\n            // pad cross line Y and X\r\n            p.crossLY.style.position = p.crossLX.style.position = \"absolute\";\r\n            p.crossLY.style.background = p.crossLX.style.background =\r\n              THIS.pointerColor;\r\n            p.crossLY.style.height = p.crossLX.style.width =\r\n              crossOuterSize - 2 * THIS.pointerBorderWidth + \"px\";\r\n            p.crossLY.style.width = p.crossLX.style.height =\r\n              THIS.pointerThickness + \"px\";\r\n            p.crossLY.style.left = p.crossLX.style.top =\r\n              Math.floor(crossOuterSize / 2) -\r\n              Math.floor(THIS.pointerThickness / 2) +\r\n              \"px\";\r\n            p.crossLY.style.top = p.crossLX.style.left =\r\n              THIS.pointerBorderWidth + \"px\";\r\n\r\n            // slider\r\n            p.sld.style.overflow = \"hidden\";\r\n            p.sld.style.width = THIS.sliderSize + \"px\";\r\n            p.sld.style.height = THIS.height + \"px\";\r\n\r\n            // slider gradient\r\n            p.sldGrad.draw(THIS.sliderSize, THIS.height, \"#000\", \"#000\");\r\n\r\n            // slider border\r\n            p.sldB.style.display = displaySlider ? \"block\" : \"none\";\r\n            p.sldB.style.position = \"absolute\";\r\n            p.sldB.style.right = THIS.padding + \"px\";\r\n            p.sldB.style.top = THIS.padding + \"px\";\r\n            p.sldB.style.border = THIS.insetWidth + \"px solid\";\r\n            p.sldB.style.borderColor = THIS.insetColor;\r\n\r\n            // slider mouse area\r\n            p.sldM._jscInstance = THIS;\r\n            p.sldM._jscControlName = \"sld\";\r\n            p.sldM.style.display = displaySlider ? \"block\" : \"none\";\r\n            p.sldM.style.position = \"absolute\";\r\n            p.sldM.style.right = \"0\";\r\n            p.sldM.style.top = \"0\";\r\n            p.sldM.style.width =\r\n              THIS.sliderSize +\r\n              padToSliderPadding / 2 +\r\n              THIS.padding +\r\n              2 * THIS.insetWidth +\r\n              \"px\";\r\n            p.sldM.style.height = dims[1] + \"px\";\r\n            p.sldM.style.cursor = \"default\";\r\n\r\n            // slider pointer inner and outer border\r\n            p.sldPtrIB.style.border = p.sldPtrOB.style.border =\r\n              THIS.pointerBorderWidth + \"px solid \" + THIS.pointerBorderColor;\r\n\r\n            // slider pointer outer border\r\n            p.sldPtrOB.style.position = \"absolute\";\r\n            p.sldPtrOB.style.left =\r\n              -(2 * THIS.pointerBorderWidth + THIS.pointerThickness) + \"px\";\r\n            p.sldPtrOB.style.top = \"0\";\r\n\r\n            // slider pointer middle border\r\n            p.sldPtrMB.style.border =\r\n              THIS.pointerThickness + \"px solid \" + THIS.pointerColor;\r\n\r\n            // slider pointer spacer\r\n            p.sldPtrS.style.width = THIS.sliderSize + \"px\";\r\n            p.sldPtrS.style.height = sliderPtrSpace + \"px\";\r\n\r\n            // the Close button\r\n            function setBtnBorder() {\r\n              var insetColors = THIS.insetColor.split(/\\s+/);\r\n              var outsetColor =\r\n                insetColors.length < 2\r\n                  ? insetColors[0]\r\n                  : insetColors[1] +\r\n                    \" \" +\r\n                    insetColors[0] +\r\n                    \" \" +\r\n                    insetColors[0] +\r\n                    \" \" +\r\n                    insetColors[1];\r\n              p.btn.style.borderColor = outsetColor;\r\n            }\r\n            p.btn.style.display = THIS.closable ? \"block\" : \"none\";\r\n            p.btn.style.position = \"absolute\";\r\n            p.btn.style.left = THIS.padding + \"px\";\r\n            p.btn.style.bottom = THIS.padding + \"px\";\r\n            p.btn.style.padding = \"0 15px\";\r\n            p.btn.style.height = THIS.buttonHeight + \"px\";\r\n            p.btn.style.border = THIS.insetWidth + \"px solid\";\r\n            setBtnBorder();\r\n            p.btn.style.color = THIS.buttonColor;\r\n            p.btn.style.font = \"12px sans-serif\";\r\n            p.btn.style.textAlign = \"center\";\r\n            try {\r\n              p.btn.style.cursor = \"pointer\";\r\n            } catch (eOldIE) {\r\n              p.btn.style.cursor = \"hand\";\r\n            }\r\n            p.btn.onmousedown = function () {\r\n              THIS.hide();\r\n            };\r\n            p.btnT.style.lineHeight = THIS.buttonHeight + \"px\";\r\n            p.btnT.innerHTML = \"\";\r\n            p.btnT.appendChild(document.createTextNode(THIS.closeText));\r\n\r\n            // place pointers\r\n            redrawPad();\r\n            redrawSld();\r\n\r\n            // If we are changing the owner without first closing the picker,\r\n            // make sure to first deal with the old owner\r\n            if (jsc.picker.owner && jsc.picker.owner !== THIS) {\r\n              jsc.unsetClass(jsc.picker.owner.targetElement, THIS.activeClass);\r\n            }\r\n\r\n            // Set the new picker owner\r\n            jsc.picker.owner = THIS;\r\n\r\n            // The redrawPosition() method needs picker.owner to be set, that's why we call it here,\r\n            // after setting the owner\r\n            if (jsc.isElementType(container, \"body\")) {\r\n              jsc.redrawPosition();\r\n            } else {\r\n              jsc._drawPosition(THIS, 0, 0, \"relative\", false);\r\n            }\r\n\r\n            if (p.wrap.parentNode != container) {\r\n              container.appendChild(p.wrap);\r\n            }\r\n\r\n            jsc.setClass(THIS.targetElement, THIS.activeClass);\r\n          }\r\n\r\n          function redrawPad() {\r\n            // redraw the pad pointer\r\n            switch (jsc.getPadYComponent(THIS)) {\r\n              case \"s\":\r\n                var yComponent = 1;\r\n                break;\r\n              case \"v\":\r\n                var yComponent = 2;\r\n                break;\r\n            }\r\n            var x = Math.round((THIS.hsv[0] / 360) * (THIS.width - 1));\r\n            var y = Math.round(\r\n              (1 - THIS.hsv[yComponent] / 100) * (THIS.height - 1)\r\n            );\r\n            var crossOuterSize =\r\n              2 * THIS.pointerBorderWidth +\r\n              THIS.pointerThickness +\r\n              2 * THIS.crossSize;\r\n            var ofs = -Math.floor(crossOuterSize / 2);\r\n            jsc.picker.cross.style.left = x + ofs + \"px\";\r\n            jsc.picker.cross.style.top = y + ofs + \"px\";\r\n\r\n            // redraw the slider\r\n            switch (jsc.getSliderComponent(THIS)) {\r\n              case \"s\":\r\n                var rgb1 = HSV_RGB(THIS.hsv[0], 100, THIS.hsv[2]);\r\n                var rgb2 = HSV_RGB(THIS.hsv[0], 0, THIS.hsv[2]);\r\n                var color1 =\r\n                  \"rgb(\" +\r\n                  Math.round(rgb1[0]) +\r\n                  \",\" +\r\n                  Math.round(rgb1[1]) +\r\n                  \",\" +\r\n                  Math.round(rgb1[2]) +\r\n                  \")\";\r\n                var color2 =\r\n                  \"rgb(\" +\r\n                  Math.round(rgb2[0]) +\r\n                  \",\" +\r\n                  Math.round(rgb2[1]) +\r\n                  \",\" +\r\n                  Math.round(rgb2[2]) +\r\n                  \")\";\r\n                jsc.picker.sldGrad.draw(\r\n                  THIS.sliderSize,\r\n                  THIS.height,\r\n                  color1,\r\n                  color2\r\n                );\r\n                break;\r\n              case \"v\":\r\n                var rgb = HSV_RGB(THIS.hsv[0], THIS.hsv[1], 100);\r\n                var color1 =\r\n                  \"rgb(\" +\r\n                  Math.round(rgb[0]) +\r\n                  \",\" +\r\n                  Math.round(rgb[1]) +\r\n                  \",\" +\r\n                  Math.round(rgb[2]) +\r\n                  \")\";\r\n                var color2 = \"#000\";\r\n                jsc.picker.sldGrad.draw(\r\n                  THIS.sliderSize,\r\n                  THIS.height,\r\n                  color1,\r\n                  color2\r\n                );\r\n                break;\r\n            }\r\n          }\r\n\r\n          function redrawSld() {\r\n            var sldComponent = jsc.getSliderComponent(THIS);\r\n            if (sldComponent) {\r\n              // redraw the slider pointer\r\n              switch (sldComponent) {\r\n                case \"s\":\r\n                  var yComponent = 1;\r\n                  break;\r\n                case \"v\":\r\n                  var yComponent = 2;\r\n                  break;\r\n              }\r\n              var y = Math.round(\r\n                (1 - THIS.hsv[yComponent] / 100) * (THIS.height - 1)\r\n              );\r\n              jsc.picker.sldPtrOB.style.top =\r\n                y -\r\n                (2 * THIS.pointerBorderWidth + THIS.pointerThickness) -\r\n                Math.floor(sliderPtrSpace / 2) +\r\n                \"px\";\r\n            }\r\n          }\r\n\r\n          function isPickerOwner() {\r\n            return jsc.picker && jsc.picker.owner === THIS;\r\n          }\r\n\r\n          function blurValue() {\r\n            THIS.importColor();\r\n          }\r\n\r\n          // Find the target element\r\n          if (typeof targetElement === \"string\") {\r\n            var id = targetElement;\r\n            var elm = document.getElementById(id);\r\n            if (elm) {\r\n              this.targetElement = elm;\r\n            } else {\r\n              jsc.warn(\"Could not find target element with ID '\" + id + \"'\");\r\n            }\r\n          } else if (targetElement) {\r\n            this.targetElement = targetElement;\r\n          } else {\r\n            jsc.warn(\"Invalid target element: '\" + targetElement + \"'\");\r\n          }\r\n\r\n          if (this.targetElement._jscLinkedInstance) {\r\n            jsc.warn(\r\n              \"Cannot link jscolor twice to the same element. Skipping.\"\r\n            );\r\n            return;\r\n          }\r\n          this.targetElement._jscLinkedInstance = this;\r\n\r\n          // Find the value element\r\n          this.valueElement = jsc.fetchElement(this.valueElement);\r\n          // Find the style element\r\n          this.styleElement = jsc.fetchElement(this.styleElement);\r\n\r\n          var THIS = this;\r\n          var container = this.container\r\n            ? jsc.fetchElement(this.container)\r\n            : document.getElementsByTagName(\"body\")[0];\r\n          var sliderPtrSpace = 3; // px\r\n\r\n          // For BUTTON elements it's important to stop them from sending the form when clicked\r\n          // (e.g. in Safari)\r\n          if (jsc.isElementType(this.targetElement, \"button\")) {\r\n            if (this.targetElement.onclick) {\r\n              var origCallback = this.targetElement.onclick;\r\n              this.targetElement.onclick = function (evt) {\r\n                origCallback.call(this, evt);\r\n                return false;\r\n              };\r\n            } else {\r\n              this.targetElement.onclick = function () {\r\n                return false;\r\n              };\r\n            }\r\n          }\r\n\r\n          /*\r\n\t\tvar elm = this.targetElement;\r\n\t\tdo {\r\n\t\t\t// If the target element or one of its offsetParents has fixed position,\r\n\t\t\t// then use fixed positioning instead\r\n\t\t\t//\r\n\t\t\t// Note: In Firefox, getComputedStyle returns null in a hidden iframe,\r\n\t\t\t// that's why we need to check if the returned style object is non-empty\r\n\t\t\tvar currStyle = jsc.getStyle(elm);\r\n\t\t\tif (currStyle && currStyle.position.toLowerCase() === 'fixed') {\r\n\t\t\t\tthis.fixed = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (elm !== this.targetElement) {\r\n\t\t\t\t// attach onParentScroll so that we can recompute the picker position\r\n\t\t\t\t// when one of the offsetParents is scrolled\r\n\t\t\t\tif (!elm._jscEventsAttached) {\r\n\t\t\t\t\tjsc.attachEvent(elm, 'scroll', jsc.onParentScroll);\r\n\t\t\t\t\telm._jscEventsAttached = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while ((elm = elm.offsetParent) && !jsc.isElementType(elm, 'body'));\r\n\t\t*/\r\n\r\n          // valueElement\r\n          if (this.valueElement) {\r\n            if (jsc.isElementType(this.valueElement, \"input\")) {\r\n              var updateField = function () {\r\n                THIS.fromString(THIS.valueElement.value, jsc.leaveValue);\r\n                jsc.dispatchFineChange(THIS);\r\n              };\r\n              jsc.attachEvent(this.valueElement, \"keyup\", updateField);\r\n              jsc.attachEvent(this.valueElement, \"input\", updateField);\r\n              jsc.attachEvent(this.valueElement, \"blur\", blurValue);\r\n              this.valueElement.setAttribute(\"autocomplete\", \"off\");\r\n            }\r\n          }\r\n\r\n          // styleElement\r\n          if (this.styleElement) {\r\n            this.styleElement._jscOrigStyle = {\r\n              backgroundImage: this.styleElement.style.backgroundImage,\r\n              backgroundColor: this.styleElement.style.backgroundColor,\r\n              color: this.styleElement.style.color,\r\n            };\r\n          }\r\n\r\n          if (this.value) {\r\n            // Try to set the color from the .value option and if unsuccessful,\r\n            // export the current color\r\n            this.fromString(this.value) || this.exportColor();\r\n          } else {\r\n            this.importColor();\r\n          }\r\n        },\r\n      };\r\n\r\n      //================================\r\n      // Public properties and methods\r\n      //================================\r\n\r\n      // By default, search for all elements with class=\"jscolor\" and install a color picker on them.\r\n      //\r\n      // You can change what class name will be looked for by setting the property jscolor.lookupClass\r\n      // anywhere in your HTML document. To completely disable the automatic lookup, set it to null.\r\n      //\r\n      jsc.jscolor.lookupClass = \"jscolor\";\r\n\r\n      jsc.jscolor.installByClassName = function (className) {\r\n        var inputElms = document.getElementsByTagName(\"input\");\r\n        var buttonElms = document.getElementsByTagName(\"button\");\r\n\r\n        jsc.tryInstallOnElements(inputElms, className);\r\n        jsc.tryInstallOnElements(buttonElms, className);\r\n      };\r\n\r\n      jsc.register();\r\n\r\n      return jsc.jscolor;\r\n    })();\r\n  }\r\n","D:\\Mac OS X Projects\\7. Mini-Apps\\paint-clone-2\\src\\Paint.js",["70","71"],[],{"ruleId":"72","severity":1,"message":"73","line":4,"column":10,"nodeType":"74","messageId":"75","endLine":4,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":5,"column":10,"nodeType":"74","messageId":"75","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"78","line":15,"column":3,"nodeType":"79","messageId":"80","endLine":15,"endColumn":16,"fix":"81"},{"ruleId":"82","severity":1,"message":"83","line":42,"column":42,"nodeType":"84","messageId":"85","endLine":42,"endColumn":44},{"ruleId":"86","severity":1,"message":"87","line":68,"column":26,"nodeType":"88","messageId":"89","endLine":68,"endColumn":66},{"ruleId":"82","severity":1,"message":"83","line":87,"column":40,"nodeType":"84","messageId":"85","endLine":87,"endColumn":42},{"ruleId":"90","severity":1,"message":"91","line":181,"column":60,"nodeType":"92","messageId":"85","endLine":181,"endColumn":76},{"ruleId":"82","severity":1,"message":"83","line":190,"column":61,"nodeType":"84","messageId":"85","endLine":190,"endColumn":63},{"ruleId":"93","severity":1,"message":"94","line":245,"column":17,"nodeType":"74","messageId":"95","endLine":245,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":263,"column":16,"nodeType":"84","messageId":"85","endLine":263,"endColumn":18},{"ruleId":"93","severity":1,"message":"97","line":482,"column":19,"nodeType":"74","messageId":"95","endLine":482,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":571,"column":11,"nodeType":"100","messageId":"101","endLine":575,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":574,"column":15,"nodeType":"104","messageId":"105","endLine":574,"endColumn":21},{"ruleId":"98","severity":1,"message":"99","line":581,"column":13,"nodeType":"100","messageId":"101","endLine":588,"endColumn":14},{"ruleId":"102","severity":1,"message":"103","line":584,"column":17,"nodeType":"104","messageId":"105","endLine":584,"endColumn":23},{"ruleId":"102","severity":1,"message":"103","line":587,"column":17,"nodeType":"104","messageId":"105","endLine":587,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":707,"column":11,"nodeType":"100","messageId":"101","endLine":728,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":710,"column":15,"nodeType":"100","messageId":"101","endLine":721,"endColumn":16},{"ruleId":"98","severity":1,"message":"99","line":742,"column":13,"nodeType":"100","messageId":"101","endLine":758,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":786,"column":26,"nodeType":"88","messageId":"89","endLine":786,"endColumn":60},{"ruleId":"98","severity":1,"message":"99","line":812,"column":11,"nodeType":"100","messageId":"101","endLine":819,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":833,"column":11,"nodeType":"100","messageId":"101","endLine":840,"endColumn":12},{"ruleId":"98","severity":1,"message":"99","line":922,"column":15,"nodeType":"100","messageId":"101","endLine":931,"endColumn":16},{"ruleId":"93","severity":1,"message":"106","line":976,"column":17,"nodeType":"74","messageId":"95","endLine":976,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":988,"column":15,"nodeType":"100","messageId":"101","endLine":995,"endColumn":16},{"ruleId":"93","severity":1,"message":"106","line":1055,"column":17,"nodeType":"74","messageId":"95","endLine":1055,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":1523,"column":13,"nodeType":"100","messageId":"101","endLine":1537,"endColumn":14},{"ruleId":"82","severity":1,"message":"96","line":1827,"column":35,"nodeType":"84","messageId":"85","endLine":1827,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":1836,"column":13,"nodeType":"100","messageId":"101","endLine":1843,"endColumn":14},{"ruleId":"93","severity":1,"message":"107","line":1841,"column":21,"nodeType":"74","messageId":"95","endLine":1841,"endColumn":31},{"ruleId":"98","severity":1,"message":"99","line":1857,"column":13,"nodeType":"100","messageId":"101","endLine":1902,"endColumn":14},{"ruleId":"93","severity":1,"message":"108","line":1886,"column":21,"nodeType":"74","messageId":"95","endLine":1886,"endColumn":27},{"ruleId":"93","severity":1,"message":"109","line":1894,"column":21,"nodeType":"74","messageId":"95","endLine":1894,"endColumn":27},{"ruleId":"98","severity":1,"message":"99","line":1909,"column":15,"nodeType":"100","messageId":"101","endLine":1916,"endColumn":16},{"ruleId":"93","severity":1,"message":"107","line":1914,"column":23,"nodeType":"74","messageId":"95","endLine":1914,"endColumn":33},{"ruleId":"72","severity":1,"message":"76","line":12,"column":9,"nodeType":"74","messageId":"75","endLine":12,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":111,"column":13,"nodeType":"112","endLine":111,"endColumn":30},"no-unused-vars","'script' is defined but never used.","Identifier","unusedVar","'jscolor' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"113","text":"114"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","no-caller","Avoid arguments.callee.","MemberExpression","no-redeclare","'ev' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'pp' is already defined.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'drawFunc' is already defined.","'yComponent' is already defined.","'color1' is already defined.","'color2' is already defined.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",[295,308],""]